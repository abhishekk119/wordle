body {
  background-color: black;
}
.heading {
  color: white;
  text-align: center;
}
.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}
.box {
  height: 45px;
  width: 45px;
  border: solid 2px gray;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  transform-origin: center;
}
.row {
  display: flex;
  gap: 5px;
  margin: 5px;
}
.correct-position {
  background-color: lightgreen;
  border: solid 2px lightgreen;
}

.matched {
  background-color: gold;
  border: solid 2px gold;
}

.nomatch {
  background-color: grey;
  border: solid 2px grey;
}

.box.pop {
  animation: pop 0.3s ease;
}

@keyframes pop {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  } /* Slightly bigger than 1.1 for bounce */
  100% {
    transform: scale(1);
  }
}

/* Popup container (covers entire screen) */
/* Default hidden state */
/* Base popup style (always present) */
#popup {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
  z-index: 1000;
}

.popup-visible {
  opacity: 1 !important;
  pointer-events: auto !important;
}

.popup-content {
  background: white;
  padding: 2rem;
  border-radius: 10px;
  text-align: center;
  max-width: 300px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
}

.shake {
  animation: shake 0.4s ease;
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10%,
  30%,
  50%,
  70%,
  90% {
    transform: translateX(-5px);
  }
  20%,
  40%,
  60%,
  80% {
    transform: translateX(5px);
  }
}

#close-popup {
  margin-left: 250px;
}

/*********************************************/

@keyframes flip {
  0% {
    transform: rotateX(0);
  }
  50% {
    transform: rotateX(90deg);
  }
  100% {
    transform: rotateX(0deg);
  }
}

.box.flip {
  animation: flip 0.5s ease;
}

.keyboard {
  display: flex;
  flex-direction: column;
  align-items: center; /* Centers rows horizontally */
  gap: 8px;
  margin: 20px auto 0; /* Top margin 20px, auto left/right for horizontal centering */
  max-width: fit-content; /* Makes container only as wide as its contents */
  padding: 10px;
}

.keyboard-row {
  display: flex;
  gap: 6px;
  justify-content: center; /* Centers buttons within each row */
  width: 100%; /* Ensures rows take full width of keyboard container */
}

/* Button styles remain the same */
.keyboard button {
  width: 40px;
  height: 50px;
  font-size: 1.2em;
  cursor: pointer;
  border: none;
  border-radius: 5px;
  background-color: #d3d6da;
  font-weight: bold;
}

.wide {
  width: 80px !important;
}

.instruction-wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9); /* Dark semi-transparent overlay */
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2000; /* Higher than everything else */
}

.instruction {
  width: 300px;
  background-color: white;
  border-radius: 10px;
  padding: 20px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  position: relative;
}

#close-instruction {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  font-size: 1.2em;
  cursor: pointer;
  padding: 5px 10px;
}

.instruction h2 {
  margin-top: 0;
  color: #333;
}

.instruction ul {
  padding-left: 20px;
}

.instruction li {
  margin-bottom: 10px;
  color: #555;
}

.messg {
  color: #333;
}


/* Add this to your existing CSS */
canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10; /* Behind wrapper but above body */
  pointer-events: none;
}

.wrapper {
  position: relative;
  z-index: 20; /* Above the confetti */
}

#popup {
  z-index: 30; /* Above both wrapper and confetti */
}


.message {
  position: fixed;
  top: 40px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #fff;
  color: black;
  padding: 12px 20px;
  border-radius: 6px;
  font-size: 16px;
  opacity: 0;
  transition: opacity 0.5s ease;
  z-index: 1000;
  pointer-events: none;
}

.message.show {
  opacity: 1;
}
